import { i as UploadResponse, h as UploadOptions } from '../gateway-tools-Cd7xutmh.js';
export { s as AuthenticationError, N as NetworkError, r as PinataError, t as ValidationError, v as convert } from '../gateway-tools-Cd7xutmh.js';

type UploadResult = UploadResponse | string;
interface ReactUploadOptions extends UploadOptions {
    chunkSize?: number;
}
type UseUploadReturn = {
    progress: number;
    loading: boolean;
    error: Error | null;
    uploadResponse: UploadResult | null;
    upload: (file: File, network: "public" | "private", url: string, options?: UploadOptions) => Promise<void>;
    pause: () => void;
    resume: () => void;
    cancel: () => void;
};

declare const useUpload: () => UseUploadReturn;

export { type ReactUploadOptions, type UploadResult, type UseUploadReturn, useUpload };
